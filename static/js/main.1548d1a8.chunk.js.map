{"version":3,"sources":["Components/Recipe/Recipe.js","Components/Form/Form.js","Components/ResultBar/ResultBar.js","Assets/Images/family_dinner.jpg","Components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","ingredients","dietLabels","image","className","map","ingredient","text","src","alt","Form","getSearch","search","updateSearch","onSubmit","type","value","onChange","placeholder","ResultBar","head","imagine","App","useState","recipes","setRecipes","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","e","preventDefault","target","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TA0BeA,G,YAtBA,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MAC9C,OACI,sBAAKC,UAAU,iBAAf,UACI,6BAAKJ,IACL,sBAAKI,UAAU,cAAf,UACI,gCACI,6CACA,6BACKH,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,4BAAIL,OAER,qBAAKM,IAAKL,EAAOM,IAAKT,YCAvBU,G,MAfF,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAC/B,OACI,sBAAKT,UAAU,iBAAf,UACI,iFACA,uBAAMU,SAAUH,EAAWP,UAAU,cAArC,UACI,uBAAOA,UAAU,aAAaW,KAAK,OAAOC,MAAOJ,EAAQK,SAAUJ,EAAcK,YAAY,iCAC7F,wBAAQd,UAAU,gBAAgBW,KAAK,SAAvC,4BCMDI,G,MAXG,SAAC,GAAc,IAAbP,EAAY,EAAZA,OAChB,OACI,sBAAKR,UAAY,SAAjB,UACI,+CACA,+BAAOQ,SCRJ,G,MAAA,IAA0B,2CCiB1BQ,EAZF,WACT,OACI,sBAAKhB,UAAY,SAAjB,UACI,6CACA,wDACA,qBAAKI,IAAKa,EAASZ,IAAI,sBCyDpBa,EA5DH,WAEV,IAFgB,EAKcC,mBAAS,IALvB,mBAKTC,EALS,KAKAC,EALA,OAMYF,mBAAS,IANrB,mBAMTX,EANS,KAMDc,EANC,OAOUH,mBAAS,SAPnB,mBAOTI,EAPS,KAOFC,EAPE,KAShBC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEAEMC,MAAM,mCAAD,OAAoCL,EAApC,mBAbf,WAae,oBAZd,uCAUG,cAEXM,EAFW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjBV,EAAW,IACXA,EAAWU,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAPA,2CAAH,qDAoBhB,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,CACEO,UAXY,SAAA4B,GAChBA,EAAEC,iBACFZ,EAAShB,GACTc,EAAU,KASNd,OAAQA,EACRC,aAjBe,SAAA0B,GACnBb,EAAUa,EAAEE,OAAOzB,UAkBjB,cAAC,EAAD,CACEJ,OAAUe,IACZ,qBAAKvB,UAAU,oBAAf,SACGoB,EAAQnB,KAAI,SAAAqC,GAAM,OACjB,cAAC,EAAD,CAEE1C,MAAO0C,EAAOA,OAAOC,MACrBzC,WAAYwC,EAAOA,OAAOxC,WAC1BC,MAAOuC,EAAOA,OAAOvC,MACrBF,YAAayC,EAAOA,OAAOzC,aAJtByC,EAAOA,OAAOC,gBC1ChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1548d1a8.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Recipe.css\"\r\n\r\n\r\nconst Recipe = ({ title, ingredients, dietLabels, image }) => {\r\n    return (\r\n        <div className=\"recipe-wrapper\">\r\n            <h1>{title}</h1>\r\n            <div className=\"ingredients\">\r\n                <div>\r\n                    <h3>Ingredients</h3>\r\n                    <ol>\r\n                        {ingredients.map(ingredient => (\r\n                            <li>{ingredient.text}</li>\r\n                        ))}\r\n                    </ol>\r\n                    <p>{dietLabels}</p>\r\n                </div>\r\n                <img src={image} alt={title}></img>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport \"./Form.css\"\r\n\r\nconst Form = ({ getSearch, search, updateSearch }) => {\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h3>Look up recepies by ingredients, get inspired..</h3>\r\n            <form onSubmit={getSearch} className=\"search-form\">\r\n                <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} placeholder=\"write your ingredient here..\"></input>\r\n                <button className=\"search-button\" type=\"submit\">\r\n                    Search\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\nimport \"./ResultBar.css\"\n\n\nconst ResultBar = ({search}) => {\n    return (\n        <div className = \"result\">\n            <h3>Results for: </h3>\n            <span>{search}</span>\n        </div>\n    );\n}\n\n\n\nexport default ResultBar;","export default __webpack_public_path__ + \"static/media/family_dinner.d61c8513.jpg\";","import React from 'react';\nimport \"./Header.css\"\nimport imagine from \"../../Assets/Images/family_dinner.jpg\";\n\n\nconst head = () => {\n    return (\n        <div className = \"header\">\n            <h1>Recipes App</h1>\n            <h3>What do we cook today?</h3>\n            <img src={imagine} alt=\"woman cooking\"></img>\n        </div>\n    );\n}\n\n\n\nexport default head;","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Recipe from \"./Components/Recipe/Recipe\";\nimport Form from \"./Components/Form/Form\";\nimport ResultBar from \"./Components/ResultBar/ResultBar\";\nimport Header from \"./Components/Header/Header\";\n\nconst App = () => {\n\n  const APP_ID = \"ce40a271\";\n  const APP_KEY = \"6a572bfc190f5a5010daf4e65137c97f\t\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('pasta');\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]) //by adding the array the effect runs only when the app mounts\n\n  const getRecipes = async () => {\n    //await needed as is an external response\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n    //we wait the response fetched and then we get the data\n    const data = await response.json();\n    setRecipes([]);\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault(); //stop refresh\n    setQuery(search);\n    setSearch('');\n  }\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      \n      <Form\n        getSearch={getSearch}\n        search={search}\n        updateSearch={updateSearch}\n      />\n      <ResultBar \n        search = {query}/>\n      <div className=\"recipes-container\">\n        {recipes.map(recipe => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            dietLabels={recipe.recipe.dietLabels}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}